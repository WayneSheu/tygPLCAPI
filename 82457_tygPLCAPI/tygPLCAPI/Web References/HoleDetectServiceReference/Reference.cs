//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace tygPLCAPI.HoleDetectServiceReference {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HoleDetectServiceSoap", Namespace="http://tempuri.org/")]
    public partial class HoleDetectService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckAreaReflashOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPlatformReflashOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMachineReflashOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetkAreaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlatformDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMaterialDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMaterialData_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMaterialDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTestModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartDAQOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HoleDetectService() {
            this.Url = global::tygPLCAPI.Properties.Settings.Default.tygPLCAPI_HoleDetectServiceReference_HoleDetectService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckAreaReflashCompletedEventHandler CheckAreaReflashCompleted;
        
        /// <remarks/>
        public event CheckPlatformReflashCompletedEventHandler CheckPlatformReflashCompleted;
        
        /// <remarks/>
        public event CheckMachineReflashCompletedEventHandler CheckMachineReflashCompleted;
        
        /// <remarks/>
        public event GetkAreaDataCompletedEventHandler GetkAreaDataCompleted;
        
        /// <remarks/>
        public event GetPlatformDataCompletedEventHandler GetPlatformDataCompleted;
        
        /// <remarks/>
        public event GetMachineDataCompletedEventHandler GetMachineDataCompleted;
        
        /// <remarks/>
        public event SetMaterialDataCompletedEventHandler SetMaterialDataCompleted;
        
        /// <remarks/>
        public event SetMaterialData_NewCompletedEventHandler SetMaterialData_NewCompleted;
        
        /// <remarks/>
        public event UpdateMaterialDataCompletedEventHandler UpdateMaterialDataCompleted;
        
        /// <remarks/>
        public event SetTestModeCompletedEventHandler SetTestModeCompleted;
        
        /// <remarks/>
        public event RestartDAQCompletedEventHandler RestartDAQCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAreaReflash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAreaReflash(string lastReflash, string factoryID, string areaID) {
            object[] results = this.Invoke("CheckAreaReflash", new object[] {
                        lastReflash,
                        factoryID,
                        areaID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAreaReflashAsync(string lastReflash, string factoryID, string areaID) {
            this.CheckAreaReflashAsync(lastReflash, factoryID, areaID, null);
        }
        
        /// <remarks/>
        public void CheckAreaReflashAsync(string lastReflash, string factoryID, string areaID, object userState) {
            if ((this.CheckAreaReflashOperationCompleted == null)) {
                this.CheckAreaReflashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAreaReflashOperationCompleted);
            }
            this.InvokeAsync("CheckAreaReflash", new object[] {
                        lastReflash,
                        factoryID,
                        areaID}, this.CheckAreaReflashOperationCompleted, userState);
        }
        
        private void OnCheckAreaReflashOperationCompleted(object arg) {
            if ((this.CheckAreaReflashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAreaReflashCompleted(this, new CheckAreaReflashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPlatformReflash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckPlatformReflash(string lastReflash, string factoryID, string areaID, string PlatformID) {
            object[] results = this.Invoke("CheckPlatformReflash", new object[] {
                        lastReflash,
                        factoryID,
                        areaID,
                        PlatformID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPlatformReflashAsync(string lastReflash, string factoryID, string areaID, string PlatformID) {
            this.CheckPlatformReflashAsync(lastReflash, factoryID, areaID, PlatformID, null);
        }
        
        /// <remarks/>
        public void CheckPlatformReflashAsync(string lastReflash, string factoryID, string areaID, string PlatformID, object userState) {
            if ((this.CheckPlatformReflashOperationCompleted == null)) {
                this.CheckPlatformReflashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPlatformReflashOperationCompleted);
            }
            this.InvokeAsync("CheckPlatformReflash", new object[] {
                        lastReflash,
                        factoryID,
                        areaID,
                        PlatformID}, this.CheckPlatformReflashOperationCompleted, userState);
        }
        
        private void OnCheckPlatformReflashOperationCompleted(object arg) {
            if ((this.CheckPlatformReflashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPlatformReflashCompleted(this, new CheckPlatformReflashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMachineReflash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckMachineReflash(string lastReflash, string factoryID, string areaID, string machineID) {
            object[] results = this.Invoke("CheckMachineReflash", new object[] {
                        lastReflash,
                        factoryID,
                        areaID,
                        machineID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckMachineReflashAsync(string lastReflash, string factoryID, string areaID, string machineID) {
            this.CheckMachineReflashAsync(lastReflash, factoryID, areaID, machineID, null);
        }
        
        /// <remarks/>
        public void CheckMachineReflashAsync(string lastReflash, string factoryID, string areaID, string machineID, object userState) {
            if ((this.CheckMachineReflashOperationCompleted == null)) {
                this.CheckMachineReflashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMachineReflashOperationCompleted);
            }
            this.InvokeAsync("CheckMachineReflash", new object[] {
                        lastReflash,
                        factoryID,
                        areaID,
                        machineID}, this.CheckMachineReflashOperationCompleted, userState);
        }
        
        private void OnCheckMachineReflashOperationCompleted(object arg) {
            if ((this.CheckMachineReflashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMachineReflashCompleted(this, new CheckMachineReflashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetkAreaData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetkAreaData(string factoryID, string areaID) {
            object[] results = this.Invoke("GetkAreaData", new object[] {
                        factoryID,
                        areaID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetkAreaDataAsync(string factoryID, string areaID) {
            this.GetkAreaDataAsync(factoryID, areaID, null);
        }
        
        /// <remarks/>
        public void GetkAreaDataAsync(string factoryID, string areaID, object userState) {
            if ((this.GetkAreaDataOperationCompleted == null)) {
                this.GetkAreaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetkAreaDataOperationCompleted);
            }
            this.InvokeAsync("GetkAreaData", new object[] {
                        factoryID,
                        areaID}, this.GetkAreaDataOperationCompleted, userState);
        }
        
        private void OnGetkAreaDataOperationCompleted(object arg) {
            if ((this.GetkAreaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetkAreaDataCompleted(this, new GetkAreaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlatformData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlatformData(string factoryID, string areaID, string platformID) {
            object[] results = this.Invoke("GetPlatformData", new object[] {
                        factoryID,
                        areaID,
                        platformID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlatformDataAsync(string factoryID, string areaID, string platformID) {
            this.GetPlatformDataAsync(factoryID, areaID, platformID, null);
        }
        
        /// <remarks/>
        public void GetPlatformDataAsync(string factoryID, string areaID, string platformID, object userState) {
            if ((this.GetPlatformDataOperationCompleted == null)) {
                this.GetPlatformDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlatformDataOperationCompleted);
            }
            this.InvokeAsync("GetPlatformData", new object[] {
                        factoryID,
                        areaID,
                        platformID}, this.GetPlatformDataOperationCompleted, userState);
        }
        
        private void OnGetPlatformDataOperationCompleted(object arg) {
            if ((this.GetPlatformDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlatformDataCompleted(this, new GetPlatformDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMachineData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMachineData(string factoryID, string areaID, string machineID) {
            object[] results = this.Invoke("GetMachineData", new object[] {
                        factoryID,
                        areaID,
                        machineID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineDataAsync(string factoryID, string areaID, string machineID) {
            this.GetMachineDataAsync(factoryID, areaID, machineID, null);
        }
        
        /// <remarks/>
        public void GetMachineDataAsync(string factoryID, string areaID, string machineID, object userState) {
            if ((this.GetMachineDataOperationCompleted == null)) {
                this.GetMachineDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineDataOperationCompleted);
            }
            this.InvokeAsync("GetMachineData", new object[] {
                        factoryID,
                        areaID,
                        machineID}, this.GetMachineDataOperationCompleted, userState);
        }
        
        private void OnGetMachineDataOperationCompleted(object arg) {
            if ((this.GetMachineDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineDataCompleted(this, new GetMachineDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMaterialData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMaterialData(string factoryID, string areaID, string platformID, int mpileSort, string[] mpileSerial, string mRatio) {
            object[] results = this.Invoke("SetMaterialData", new object[] {
                        factoryID,
                        areaID,
                        platformID,
                        mpileSort,
                        mpileSerial,
                        mRatio});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMaterialDataAsync(string factoryID, string areaID, string platformID, int mpileSort, string[] mpileSerial, string mRatio) {
            this.SetMaterialDataAsync(factoryID, areaID, platformID, mpileSort, mpileSerial, mRatio, null);
        }
        
        /// <remarks/>
        public void SetMaterialDataAsync(string factoryID, string areaID, string platformID, int mpileSort, string[] mpileSerial, string mRatio, object userState) {
            if ((this.SetMaterialDataOperationCompleted == null)) {
                this.SetMaterialDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMaterialDataOperationCompleted);
            }
            this.InvokeAsync("SetMaterialData", new object[] {
                        factoryID,
                        areaID,
                        platformID,
                        mpileSort,
                        mpileSerial,
                        mRatio}, this.SetMaterialDataOperationCompleted, userState);
        }
        
        private void OnSetMaterialDataOperationCompleted(object arg) {
            if ((this.SetMaterialDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMaterialDataCompleted(this, new SetMaterialDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMaterialData_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMaterialData_New(string factoryID, string areaID, string platformID, string mholeID, string[] mholeSerial, string mRatio) {
            object[] results = this.Invoke("SetMaterialData_New", new object[] {
                        factoryID,
                        areaID,
                        platformID,
                        mholeID,
                        mholeSerial,
                        mRatio});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMaterialData_NewAsync(string factoryID, string areaID, string platformID, string mholeID, string[] mholeSerial, string mRatio) {
            this.SetMaterialData_NewAsync(factoryID, areaID, platformID, mholeID, mholeSerial, mRatio, null);
        }
        
        /// <remarks/>
        public void SetMaterialData_NewAsync(string factoryID, string areaID, string platformID, string mholeID, string[] mholeSerial, string mRatio, object userState) {
            if ((this.SetMaterialData_NewOperationCompleted == null)) {
                this.SetMaterialData_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMaterialData_NewOperationCompleted);
            }
            this.InvokeAsync("SetMaterialData_New", new object[] {
                        factoryID,
                        areaID,
                        platformID,
                        mholeID,
                        mholeSerial,
                        mRatio}, this.SetMaterialData_NewOperationCompleted, userState);
        }
        
        private void OnSetMaterialData_NewOperationCompleted(object arg) {
            if ((this.SetMaterialData_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMaterialData_NewCompleted(this, new SetMaterialData_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMaterialData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateMaterialData(string factoryID, string areaID, string platformID, string[] oldMpileSerial, string oldMRatio, string[] newMpileSerial, string newMRatio) {
            object[] results = this.Invoke("UpdateMaterialData", new object[] {
                        factoryID,
                        areaID,
                        platformID,
                        oldMpileSerial,
                        oldMRatio,
                        newMpileSerial,
                        newMRatio});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMaterialDataAsync(string factoryID, string areaID, string platformID, string[] oldMpileSerial, string oldMRatio, string[] newMpileSerial, string newMRatio) {
            this.UpdateMaterialDataAsync(factoryID, areaID, platformID, oldMpileSerial, oldMRatio, newMpileSerial, newMRatio, null);
        }
        
        /// <remarks/>
        public void UpdateMaterialDataAsync(string factoryID, string areaID, string platformID, string[] oldMpileSerial, string oldMRatio, string[] newMpileSerial, string newMRatio, object userState) {
            if ((this.UpdateMaterialDataOperationCompleted == null)) {
                this.UpdateMaterialDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMaterialDataOperationCompleted);
            }
            this.InvokeAsync("UpdateMaterialData", new object[] {
                        factoryID,
                        areaID,
                        platformID,
                        oldMpileSerial,
                        oldMRatio,
                        newMpileSerial,
                        newMRatio}, this.UpdateMaterialDataOperationCompleted, userState);
        }
        
        private void OnUpdateMaterialDataOperationCompleted(object arg) {
            if ((this.UpdateMaterialDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMaterialDataCompleted(this, new UpdateMaterialDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetTestMode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetTestMode(string factoryID, string areaID, int testMode) {
            object[] results = this.Invoke("SetTestMode", new object[] {
                        factoryID,
                        areaID,
                        testMode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetTestModeAsync(string factoryID, string areaID, int testMode) {
            this.SetTestModeAsync(factoryID, areaID, testMode, null);
        }
        
        /// <remarks/>
        public void SetTestModeAsync(string factoryID, string areaID, int testMode, object userState) {
            if ((this.SetTestModeOperationCompleted == null)) {
                this.SetTestModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTestModeOperationCompleted);
            }
            this.InvokeAsync("SetTestMode", new object[] {
                        factoryID,
                        areaID,
                        testMode}, this.SetTestModeOperationCompleted, userState);
        }
        
        private void OnSetTestModeOperationCompleted(object arg) {
            if ((this.SetTestModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTestModeCompleted(this, new SetTestModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RestartDAQ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RestartDAQ() {
            this.Invoke("RestartDAQ", new object[0]);
        }
        
        /// <remarks/>
        public void RestartDAQAsync() {
            this.RestartDAQAsync(null);
        }
        
        /// <remarks/>
        public void RestartDAQAsync(object userState) {
            if ((this.RestartDAQOperationCompleted == null)) {
                this.RestartDAQOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartDAQOperationCompleted);
            }
            this.InvokeAsync("RestartDAQ", new object[0], this.RestartDAQOperationCompleted, userState);
        }
        
        private void OnRestartDAQOperationCompleted(object arg) {
            if ((this.RestartDAQCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartDAQCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckAreaReflashCompletedEventHandler(object sender, CheckAreaReflashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAreaReflashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAreaReflashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckPlatformReflashCompletedEventHandler(object sender, CheckPlatformReflashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPlatformReflashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPlatformReflashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckMachineReflashCompletedEventHandler(object sender, CheckMachineReflashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMachineReflashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMachineReflashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetkAreaDataCompletedEventHandler(object sender, GetkAreaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetkAreaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetkAreaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetPlatformDataCompletedEventHandler(object sender, GetPlatformDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlatformDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlatformDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMachineDataCompletedEventHandler(object sender, GetMachineDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetMaterialDataCompletedEventHandler(object sender, SetMaterialDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMaterialDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMaterialDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetMaterialData_NewCompletedEventHandler(object sender, SetMaterialData_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMaterialData_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMaterialData_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateMaterialDataCompletedEventHandler(object sender, UpdateMaterialDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMaterialDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMaterialDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SetTestModeCompletedEventHandler(object sender, SetTestModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetTestModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetTestModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RestartDAQCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591